import{_ as e,c as a,o as t,Q as r}from"./chunks/framework.8d891f3a.js";const m=JSON.parse('{"title":"vuecomp-starter","description":"","frontmatter":{},"headers":[],"relativePath":"guide/features.md","filePath":"guide/features.md"}'),i={name:"guide/features.md"},o=r('<h1 id="vuecomp-starter" tabindex="-1">vuecomp-starter <a class="header-anchor" href="#vuecomp-starter" aria-label="Permalink to &quot;vuecomp-starter&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>公司业务项目越来越多，人员规模越来越大，组件库的维护成本越来越高，因此需要一套组件库的快速开发方案。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>约定式开发，大幅减轻开发者工作量</li><li>已经完成组件库前期构建和打包阶段，只需要关注到组件的开发</li><li>按照约定目录进行开发，打包后的组件库能够支持按需导入，完美配合TreeShaking</li><li>集成Vitepress，按照约定位置创建文件会自动配置路由，只需要关注文档内容的编写</li><li>对测试环境支持约定式路由写法，无需编写路由文件</li><li>通过命令行来创建组件文件，减去繁琐的文件创建过程</li><li>通过简单的修改环境变量来修改开发方式</li></ul>',5),s=[o];function l(c,n,_,d,u,h){return t(),a("div",null,s)}const f=e(i,[["render",l]]);export{m as __pageData,f as default};
